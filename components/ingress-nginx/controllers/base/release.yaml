---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: ingress-nginx
spec:
  interval: 1h
  # timeout: 5m
  chart:
    spec:
      chart: ingress-nginx
      version: "4.13.0" # {"$imagepolicy": "ingress-nginx:ingress-nginx:tag"}
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx
  releaseName: ingress-nginx
  # https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml
  values:
    controller:
      replicaCount: 2
      service:
        annotations:
          lbipam.cilium.io/sharing-cross-namespace: "*"
          lbipam.cilium.io/sharing-key: ${HOSTNAME_CP1}
        labels:
          # Used by CiliumLoadBalancerIPPool
          node: ${HOSTNAME_CP1}
        type: LoadBalancer # NodePort
        # Required to preserve client IP for whitelist-source-range
        # https://github.com/kubernetes/ingress-nginx/issues/2096
        externalTrafficPolicy: Local
        # ipFamilyPolicy: PreferDualStack
        # ipFamilies:
        #   - IPv4
        #   - IPv6
        # internal:
        #   ipFamilyPolicy: PreferDualStack
        #   ipFamilies:
        #     - IPv4
        #     - IPv6
      # kind: Deployment
      nginxDebug: false
      logLevel: info # fatal, error, warn, info, debug or trace
      annotations:
        nginx: ingress-${ENVIRONMENT}
        # reloader.stakater.com/auto: "true"
        # secret.reloader.stakater.com/auto: "true"
        # secret.reloader.stakater.com/reload: "my-secret"
        configmap.reloader.stakater.com/reload: "modsecurity-plugins"
        # reloader.stakater.com/rollout-strategy: "restart"
        # reloader.stakater.com/search: "true"
      # pod:
      #   annotations:
      #     prometheus.io/scrape: "true"
      #     prometheus.io/port: "9113"
      #     prometheus.io/scheme: http
      #   extraLabels:
      #     env: prod-weset
      # nginxplus: plus
      # image:
      #   repository: nginx/nginx-ingress
      #   tag: 4.0.1

      # https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap
      config:
        error-log-level: notice # debug
        proxy-connect-timeout: "5"
        main-snippet: |
          # Main snippet
        http-snippet: |
          # HTTP snippet
          # underscores_in_headers on;
        server-snippet: |
          # Server snippet
          # https://gist.github.com/weapp/99049e69477f924dafa7

          # location ~ "^/[\d]{3}\.json$" {
          #     add_header 'Content-Type' 'application/json charset=UTF-8';
          # }
        stream-snippet: |
          # Stream snippet
        location-snippet: |
          # Location snippet
          # return 503;
        # NOTE: this may prevent custom error pages per app
        custom-http-errors: 401,403,404,405,407-413,416,418,429,500,502,503,504,505
        # custom-http-errors: 401,403,404,405,407,408,409,410,411,412,413,416,418,429,500,502,503,504,505
        hide-headers: "" # X-Powered-By

        # global-auth-url: https://$host/oauth2/auth
        # global-auth-signin: https://$host/oauth2/start?rd=$escaped_request_uri
        # global-auth-response-headers: authorization
        # no-auth-locations: /.well-known/acme-challenge/

        block-cidrs: ""
        whitelist-source-range: "10.244.0.0/16,100.64.0.0/10,${WHITELIST_SOURCE_RANGE}"

        # Enables Modsecurity
        enable-modsecurity: "true"
        enable-owasp-modsecurity-crs: "false"

        # Update ModSecurity config and rules
        modsecurity-snippet: |
          # Enable all mod security plugins
          Include /etc/nginx/owasp-modsecurity-crs/plugins/*-rule-exclusions-before.conf

          # Enable the default OWASP Core Rule Set
          Include /etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf

          # Enable prevention mode. Options: DetectionOnly,On,Off (default is DetectionOnly)
          SecRuleEngine On

          # Enable scanning of the request body
          SecRequestBodyAccess On

          # Enable XML and JSON parsing
          SecRule REQUEST_HEADERS:Content-Type "(?:text|application(?:/soap\+|/)|application/xml)/" \
            "id:200000,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"

          SecRule REQUEST_HEADERS:Content-Type "application/json" \
            "id:200001,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"

          # Reject if larger (we could also let it pass with ProcessPartial)
          SecRequestBodyLimitAction Reject

          # Send ModSecurity audit logs to the stdout (only for rejected requests)
          SecAuditLog /dev/stdout

          # format the logs in JSON
          SecAuditLogFormat JSON

          # could be On/Off/RelevantOnly
          SecAuditEngine RelevantOnly

          # https://github.com/coreruleset/coreruleset/issues/3523
          SecRuleRemoveByTag platform-windows

      # Add a volume for the plugins directory
      extraVolumes:
        - name: plugins
          configMap:
            name: modsecurity-plugins

      # override the /etc/nginx/enable-owasp-modsecurity-crs/plugins with your ConfigMap
      extraVolumeMounts:
        - name: plugins
          mountPath: /etc/nginx/owasp-modsecurity-crs/plugins

      # ingressClass: nginx

      # https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network
      # reportNodeInternalIp: true

      # -- Required for use with CNI based kubernetes installations (such as ones set up by kubeadm),
      # since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920
      # is merged
      # hostNetwork: false

      # Use host ports 80 and 443
      # https://github.com/kubernetes/kubernetes/issues/23920#issuecomment-634295218
      # https://docs.cilium.io/en/v1.7/gettingstarted/cni-chaining-portmap/
      # hostPort:
      #   enabled: true

      networkPolicy:
        enabled: true

      # https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/monitoring.md#prometheus-and-grafana-installation-using-service-monitors
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          additionalLabels:
            release: prometheus

      # TODO: use node selector instead?
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname # or metadata.name
                    operator: In
                    values:
                      - ${HOSTNAME_CP1}

    admissionWebhooks:
      enabled: true
      patch:
        networkPolicy:
          enabled: true
        certManager:
          enabled: true

    # https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/custom-errors
    # https://github.com/kubernetes/ingress-nginx/blob/main/docs/examples/customization/custom-errors/custom-default-backend.helm.values.yaml
    # https://github.com/tarampampam/error-pages
    defaultBackend:
      enabled: true
      image: # defaultbackend-amd64:1.5
        # registry: registry.k8s.io
        # image: ingress-nginx/custom-error-pages
        # tag: v1.1.2@sha256:49a5154b3f918aae436ae342ac410a947524f1da8a2f9c249b564a092cf44955
        registry: ghcr.io
        image: tarampampam/error-pages
        tag: v3.3.2@sha256:e7133e4faf97675c00ad9150c98ec1a867ae91ece5131a7eb218b868ce5a628d
      extraEnvs:
        - name: LOG_FORMAT
          value: console # console/json
        - name: LOG_LEVEL
          value: warn # debug/info/warn/error
        - name: SEND_SAME_HTTP_CODE
          value: "true"
        - name: SHOW_DETAILS
          value: "true"
        - name: TEMPLATE_NAME
          value: connection # l7
      networkPolicy:
        enabled: true
